[{"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\index.js":"1","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\App.jsx":"2","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Details\\Details.jsx":"3","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Details\\Styles.js":"4","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\index.js":"5","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\styles.js":"6","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Main\\Main.jsx":"7","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Main\\style.js":"8","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Main\\Form\\Form.jsx":"9","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Main\\Form\\styles.js":"10","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Main\\List\\List.jsx":"11","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Main\\List\\styles.js":"12","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\context\\context.jsx":"13","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\constants\\categories.js":"14","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\context\\contextReducer.js":"15","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Details\\styles.js":"16","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\utils\\formatDate.js":"17","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\useTransaction.js":"18","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Snackbars\\CustomSnackbar.jsx":"19","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Snackbars\\styles.js":"20","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Main\\InfoCard.jsx":"21"},{"size":414,"mtime":1638276917568,"results":"22","hashOfConfig":"23"},{"size":1508,"mtime":1638300218171,"results":"24","hashOfConfig":"23"},{"size":681,"mtime":1638231411935,"results":"25","hashOfConfig":"23"},{"size":226,"mtime":1638210781446,"results":"26","hashOfConfig":"23"},{"size":105,"mtime":1638213408634,"results":"27","hashOfConfig":"23"},{"size":582,"mtime":1638300875915,"results":"28","hashOfConfig":"23"},{"size":1203,"mtime":1638298425037,"results":"29","hashOfConfig":"23"},{"size":514,"mtime":1638213271221,"results":"30","hashOfConfig":"23"},{"size":5177,"mtime":1638298966556,"results":"31","hashOfConfig":"23"},{"size":247,"mtime":1608436806000,"results":"32","hashOfConfig":"23"},{"size":1538,"mtime":1638227994357,"results":"33","hashOfConfig":"23"},{"size":416,"mtime":1608436806000,"results":"34","hashOfConfig":"23"},{"size":2396,"mtime":1638297657079,"results":"35","hashOfConfig":"23"},{"size":1693,"mtime":1608436806000,"results":"36","hashOfConfig":"23"},{"size":595,"mtime":1638228285019,"results":"37","hashOfConfig":"23"},{"size":226,"mtime":1638210781446,"results":"38","hashOfConfig":"23"},{"size":301,"mtime":1608436806000,"results":"39","hashOfConfig":"23"},{"size":1116,"mtime":1638231351624,"results":"40","hashOfConfig":"23"},{"size":868,"mtime":1638297806035,"results":"41","hashOfConfig":"23"},{"size":206,"mtime":1638296483213,"results":"42","hashOfConfig":"23"},{"size":456,"mtime":1638299231222,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1t6zjqu",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\index.js",[],["90","91"],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\App.jsx",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Details\\Details.jsx",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Details\\Styles.js",[],["92","93"],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\index.js",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\styles.js",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Main\\Main.jsx",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Main\\style.js",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Main\\Form\\Form.jsx",["94"],"import {\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport { useGlobalContext } from \"../../../context/context\";\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n} from \"../../../constants/categories\";\r\nimport formatDate from \"../../../utils/formatDate\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport CustomSnackbar from \"../../Snackbars/CustomSnackbar\";\r\n\r\nconst initialState = {\r\n  amount: \"\",\r\n  category: \"\",\r\n  type: \"Income\",\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const { segment } = useSpeechContext();\r\n  const { addTransaction } = useGlobalContext();\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const selectedCategories =\r\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\"))\r\n      return;\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: +formData.amount, id: uuidv4() });\r\n\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === \"add_expense\") {\r\n        setFormData({ ...formData, type: \"Expense\" });\r\n      } else if (segment.intent.intent === \"add_income\") {\r\n        setFormData({ ...formData, type: \"Income\" });\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"create_transaction\"\r\n      ) {\r\n        return createTransaction();\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"cancel_transaction\"\r\n      ) {\r\n        setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((entity) => {\r\n        const category = `${entity.value.charAt(0)}${entity.value\r\n          .slice(1)\r\n          .toLowerCase()}`;\r\n\r\n        switch (entity.type) {\r\n          case \"amount\":\r\n            setFormData({ ...formData, amount: entity.value });\r\n            break;\r\n          case \"category\":\r\n            if (incomeCategories.map((IC) => IC.type).includes(category)) {\r\n              setFormData({ ...formData, type: \"Income\", category });\r\n            } else if (\r\n              expenseCategories.map((EC) => EC.type).includes(category)\r\n            ) {\r\n              setFormData({ ...formData, type: \"Expense\", category });\r\n            }\r\n            break;\r\n          case \"date\":\r\n            setFormData({ ...formData, date: entity.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (\r\n        segment.isFinal &&\r\n        formData.type &&\r\n        formData.category &&\r\n        formData.amount &&\r\n        formData.date\r\n      ) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <CustomSnackbar open={open} setOpen={setOpen} />\r\n      <Grid items xs={12}>\r\n        <Typography variant=\"subtitle2\" align=\"center\" gutterBottom>\r\n          {segment ? (\r\n            <div className=\"segment\">\r\n              {segment.words.map((w) => w.value).join(\" \")}\r\n            </div>\r\n          ) : null}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select\r\n            value={formData.type}\r\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\r\n          >\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            value={formData.category}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, category: e.target.value })\r\n            }\r\n          >\r\n            {selectedCategories.map((c) => (\r\n              <MenuItem key={c.type} value={c.type}>\r\n                {c.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"amount\"\r\n          fullWidth\r\n          value={formData.amount}\r\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"date\"\r\n          label=\"date\"\r\n          fullWidth\r\n          value={formData.date}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, date: formatDate(e.target.value) })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={createTransaction}\r\n      >\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Main\\List\\List.jsx",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Main\\List\\styles.js",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\context\\context.jsx",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\constants\\categories.js",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\context\\contextReducer.js",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Details\\styles.js",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\utils\\formatDate.js",["95"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n","C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\useTransaction.js",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Snackbars\\CustomSnackbar.jsx",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Snackbars\\styles.js",[],"C:\\Users\\mikias\\Desktop\\Files\\Learning Staf\\web\\Practice\\React Projects\\react-projects\\React startup\\src\\components\\Main\\InfoCard.jsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"96","replacedBy":"100"},{"ruleId":"98","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":106,"column":6,"nodeType":"104","endLine":106,"endColumn":15,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":1,"nodeType":"108","endLine":11,"endColumn":3},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["111"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"114","text":"115"},[3014,3023],"[createTransaction, formData, segment]"]